@charset "UTF-8";
ul {
  background-color: cornflowerblue;
  /* 
      nth() permet de selectionner un élément dans une liste.
  */
  /* 
      nth() permet de selectionner un élément dans une liste.
  */
  /* 
      nth() permet de selectionner un élément dans une liste.
  */
  /* 
      nth() permet de selectionner un élément dans une liste.
  */
  /* 
      nth() permet de selectionner un élément dans une liste.
  */
}
ul .truc1 {
  font-size: 30px;
}
ul .truc2 {
  font-size: 40px;
}
ul .truc3 {
  font-size: 50px;
}
ul .truc4 {
  font-size: 60px;
}
ul .truc5 {
  font-size: 70px;
}

h1 {
  color: red;
}

h2 {
  color: grey;
  background-color: black;
}

/* 
    SCSS apporte le nesting, celui-ci permet d'intégrer un selecteur dans un autre.
    par exemple ici je cible le h2 qui est dans la section.sass
*/
section.sass {
  background-color: aquamarine;
}
section.sass h2 {
  background-color: brown;
}
section.sass h2 span {
  font-style: italic;
}
section.sass h2:hover {
  transform: scale(1.5);
}

/* 
    Les variables SCSS n'apparaissent pas sur le CSS
    commençent forcément par un "$" 
    et s'utilisent en écrivant leur noms.
*/
.superP, header {
  background-color: violet;
}

main ul, header {
  display: flex;
  justify-content: center;
  align-items: center;
}

header {
  /* 
      Avec @extend nous pouvons récupérer le code défini plus haut.
      Ou alors celui d'une classe.
  */
}

/* 
    Pareillement au @extend, @mixin permet de définir des morceaux de code réutilisable.
    La différence étant que l'on va pouvoir y appliquer des paramètres variables.
    Pour cela entre les parenthèses, nous pouvons ajouter autant de variable que souhaité, et les utiliser dans notre mixin.
*/
.copy {
  font-size: 4rem;
  background-color: mediumpurple;
  position: absolute;
  top: 90%;
  left: 90%;
  transform: translate(-50%, -50%);
}

.menu {
  font-size: 3rem;
  background-color: salmon;
  position: absolute;
  top: 5%;
  left: 45%;
  transform: translate(-50%, 100%);
}

/* 
    Une fonction SCSS est un code qui est appelé en prenant un ou plusieurs paramètres.
    Et qui retournera une valeur différente.
    Certaines fonctions sont déjà prédéfini dans SCSS
    D'autres peuvent être défini par l'utilisateur.
*/
.copy {
  color: #1affff;
}

.copy {
  width: 5rem;
  height: 5rem;
  border-radius: 50%;
}

.menu {
  width: 10rem;
  height: 5rem;
  border-radius: 5px;
}

/*# sourceMappingURL=test.css.map */
