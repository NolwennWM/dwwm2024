/* 
    Pour int√©grer du CSS √† une page HTML, 3 solutions s'offrent √† nous.
        1. int√©grer l'attribut "style" √† la balise choisi
        2. ajouter la balise "style" dans le head
        3. Cr√©er un fichier CSS et le lier avec une balise "link"
    
    Pour √©crire du CSS.
    On va commencer par √©crire un "selecteur" qui permettra d'indiquer ce que l'on souhaite cibler.
    Puis entre accolade, les r√®gles √† appliquer √† notre cible.

    Une r√®gl√© s'√©crit de la fa√ßon suivante : 
        "nom de la r√®gle": "valeur √† lui donner";
    Par exemple : 
        background-color: red;

    Par d√©faut, le code est lu de haut en bas.
    Donc si une r√®gle est impos√© par du code puis contredite plus bas.
    C'est la derni√®re qui s'applique.
    Une r√®gle avec "!important" sera toujours prioritaire.
        (plus de d√©tail sur les priorit√©s en bas du cours)
*/
header
{
    font-style: italic;
    background-color: chartreuse !important;
    font-size: 20px;
}
/* -------------- Enfant Direct ou Indirect ------------------ */
main p
{
    /* Selectionne tous les p se trouvant dans un main, peu importe si d'autres balises se trouvent entre eux. */
    background-color: lightsalmon;
}
main > p 
{
    /* Selectionne tous les p se trouvant directement dans un main, excluant ceux se trouvant dans une autre balise */
    background-color: olive;
}
/* ------------ Fr√®re direct ou indirect ------------------ */
p ~ article 
{
    /* Selectionne tous les articles se trouvant apr√®s (au m√™me niveau) qu'un p */
    color:darkblue;
}
p + article
{
    /* Selectionne tout article se trouvant juste apr√®s un p (seulement le suivant) */
    color: darkgoldenrod;
}
/* ------------------- Les pseudo classes ------------------  */
/* Les pseudo classes sont des des selecteurs s'√©crivant ainsi ":nom" */
li:hover
{
    /* Au survol de l'√©l√©ment pr√©c√©dent la pseudo class (ici au survol des li) */
    background-color: deeppink;
}
li:nth-of-type(3)
{
    /* 
        Selectionne le 3√®me "li" d'une liste 
        Existe aussi en partant de la fin ":nth-last-of-type()"
    */
    background-color: tomato;
}
li:nth-child(2)
{
    /* 
        Selectionne le 2√®me enfant si c'est un "li" 
        existe aussi en partant de la fin ":nth-last-child()"
    */
    background-color: darkorange;
}
h1 a
{
    color: antiquewhite;
}
h1 a:active
{
    /* Lorsque le lien est activ√© (lors du clique) */
    color: cyan;
}
h1 a:visited
{
    /* Lorsque le lien a d√©j√† √©t√© visit√© */
    color: red;
}
p span:not(:nth-of-type(2))
{
    /* 
        ":not()" permet d'exclure un √©l√©ment.
        Ici on selectionne tous les span dans un p except√© le second
    */
    color: magenta;
}
/* -------------- les pseudo elements ----------------- */
/* Les pseudo √©l√©ments s'√©crivent ainsi "::nom" */
article p::first-letter
{
    /* Selectionne la premi√®re lettre des p dans mes articles */
    font-size: 50px;
}
main > p::first-line
{
    /* Selectionne la premi√®re ligne des p directement enfant de main */
    font-weight: bold;
}
h1::before
{
    /* Ajoute un √©l√©ment avant le contenu du h1 (la r√®gle "content" est obligatoire) */
    content: "super titre ->";
}
h1::after
{
    /* Ajoute un √©l√©ment apr√®s le contenu du h1 (la r√®gle "content" est obligatoire) */
    content: "<- C'est faux";
}
/* ---------------- classes, ID et attributs ------------------- */
#MenuImportant
{
    /* Pour selectionner un √©l√©ment par son id, je fais pr√©c√©der le nom de l'id par un "#" */
    font-size: 42px;
    font-weight: bold;
    color: red;
}
.peuImportant
{
    /* Pour selectionner des √©l√©ments par leur classe, je fais pr√©c√©der le nom de la classe par un "." */
    font-size: 8px;
    color: gainsboro;
}
a[target]
{
    /* 
        Avec les "[]" je peux selectionner des √©l√©ments via leurs attributs 
        Ici je selectionne tout "a" ayant un attribut "target"
    */
    font-family: cursive;
}
a[href*="amazon"]
{
    /* 
        Selectionne tout "a" dont le href contient le mot "amazon"
    */
    font-family: monospace;
}
a[href$=".fr"]
{
    /* 
        Selectionne tout "a" dont le href termine par ".fr"
    */
    background-color: aquamarine;
}
a[href^="https"]::before
{
    /* 
        Selectionne tout "a" dont le href commence par "https"
    */
    content: "üçó‚úì";
}
/* -------------- autres selecteurs --------------- */
*:not(h1)
{
    /* 
        "*" signifie "toute les balises"
        Ici je selectionne tout sauf le h1
    */
    font-size: 18px;
}
article p, li:nth-child(2), span:nth-of-type(2)
{
    /* la virgule est utilis√© pour selectionner plusieurs √©l√©ments en m√™me temps, m√™me si ils n'ont rien √† voir entre eux. */
    font-family: cursive;
}
/* 
    On parlait du syst√®me de priorit√© en d√©but de cours.
    Il existe un autre syst√®me qui rend prioritaire les √©l√©ments selectionn√©s avec plus de pr√©cision.

    Ce syst√®me est repr√©sent√© par 3 chiffres : "0,0,0"

    Le premier chiffre √©tant plus important que le suivant :
    1,0,0 aura la priorit√© sur 0,15,9
    0,1,0 aura la priorit√© sur 0,0,8
    0,7,0 aura la priorit√© sur 0,5,0

    Chaque selecteur diff√©rent fera augmenter un chiffre sp√©cifique:
        une balise (div, header...) fera √©voluer le dernier chiffre
            main > p vaudra 0,0,2
        Une classe fera √©voluer le second chiffre
            div.classCool vaudra 0,1,1
        un id fera √©voluer le premier chiffre
            #superId vaudra 1,0,0
*/